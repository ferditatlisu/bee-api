{
  "swagger": "2.0",
  "info": {
    "description": "KAFKA UI",
    "version": "0.1",
    "title": "Swagger of Kafka",
    "contact": {
      "email": "ferdi.tatlisu@gmail.com"
    }
  },
  "basePath": "/",
  "schemes": ["https", "http"],
  "paths": {
    "/kafka-cluster": {
      "get": {
        "tags": ["kafka"],
        "summary": "Get all kafka clusters info",
        "description": "Get all kafka clusters info",
        "operationId": "kafka-cluster",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/search": {
      "get": {
        "tags": ["kafka"],
        "summary": "Search any keyword in key or value",
        "description": "Search any keyword in key or value",
        "operationId": "search",
        "parameters": [
          {
            "name": "topicName",
            "in": "query",
            "description": "topic name",
            "required": true,
            "type": "string",
            "default": "product.liwe.heimdall-service.listing.0"
          },
          {
            "name": "value",
            "in": "query",
            "description": "search value",
            "required": true,
            "type": "string",
            "default": "4090d6f6f9b6663b6e4ef5d2996ae286"
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "startDate as ms",
            "required": true,
            "type": "integer",
            "format": "int64",
            "default": "4090d6f6f9b6663b6e4ef5d2996ae286"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "endDate as ms",
            "required": true,
            "type": "integer",
            "format": "int64",
            "default": "4090d6f6f9b6663b6e4ef5d2996ae286"
          },
          {
            "name": "valueType",
            "in": "query",
            "description": "search in key(1), value(2) or header(4). Sum values of multiple selection",
            "required": true,
            "type": "integer",
            "format": "int64",
            "default": "4090d6f6f9b6663b6e4ef5d2996ae286"
          },
          {
            "name": "kafka-id",
            "in": "header",
            "description": "kafka-id",
            "required": true,
            "type": "integer",
            "format": "int64",
            "default": 0
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SearchResponse"
            }
          }
        }
      },
      "delete": {
        "tags": ["kafka"],
        "summary": "Delete search data",
        "description": "Delete search data",
        "operationId": "delete-search",
        "parameters": [
          {
            "name": "topicName",
            "in": "query",
            "description": "topic name",
            "required": true,
            "type": "string",
            "default": "product.liwe.heimdall-service.listing.0"
          },
          {
            "name": "value",
            "in": "query",
            "description": "search value",
            "required": true,
            "type": "string",
            "default": "4090d6f6f9b6663b6e4ef5d2996ae286"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/topics": {
      "get": {
        "tags": ["kafka"],
        "summary": "Get all topics",
        "description": "Get all topics",
        "operationId": "topics",
        "parameters": [
          {
            "name": "kafka-id",
            "in": "header",
            "description": "kafka-id",
            "required": true,
            "type": "integer",
            "format": "int64",
            "default": 0
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["kafka"],
        "summary": "Remove topic",
        "description": "Remove topic",
        "operationId": "delete-topic",
        "parameters": [
          {
            "name": "kafka-id",
            "in": "header",
            "description": "kafka-id",
            "required": true,
            "type": "integer",
            "format": "int64",
            "default": 0
          },
          {
            "name": "topic",
            "in": "query",
            "description": "topic",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/consumers": {
      "get": {
        "tags": ["kafka"],
        "summary": "Get all consumer groups",
        "description": "Get all consumer groups",
        "operationId": "consumers",
        "parameters": [
          {
            "name": "kafka-id",
            "in": "header",
            "description": "kafka-id",
            "required": true,
            "type": "integer",
            "format": "int64",
            "default": 0
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["kafka"],
        "summary": "Remove consumer group",
        "description": "Remove consumer group",
        "operationId": "delete-consumer-group",
        "parameters": [
          {
            "name": "kafka-id",
            "in": "header",
            "description": "kafka-id",
            "required": true,
            "type": "integer",
            "format": "int64",
            "default": 0
          },
          {
            "name": "id",
            "in": "query",
            "description": "group id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/consumer-group-by-topic": {
      "get": {
        "tags": ["kafka"],
        "summary": "Get all consumer groups via topic",
        "description": "Get all consumer groups via topic",
        "operationId": "consumer-group-by-topic",
        "parameters": [
          {
            "name": "topic",
            "in": "query",
            "description": "topic name",
            "required": true,
            "type": "string",
            "default": "product.liwe.heimdall-service.listing.0"
          },
          {
            "name": "kafka-id",
            "in": "header",
            "description": "kafka-id",
            "required": true,
            "type": "integer",
            "format": "int64",
            "default": 0
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/consumer-group-by-group-id": {
      "get": {
        "tags": ["kafka"],
        "summary": "Get all consumer groups via group id",
        "description": "Get all consumer groups via group id",
        "operationId": "consumer-group-by-group-id",
        "parameters": [
          {
            "name": "group_id",
            "in": "query",
            "description": "group id",
            "required": true,
            "type": "string",
            "default": "product.liwe.heimdall-service.ruleCreatedEvent.high"
          },
          {
            "name": "kafka-id",
            "in": "header",
            "description": "kafka-id",
            "required": true,
            "type": "integer",
            "format": "int64",
            "default": 0
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/get-top-messages": {
      "get": {
        "tags": ["kafka"],
        "summary": "Get messages of topic",
        "description": "Get messages of topic",
        "operationId": "get-top-messages",
        "parameters": [
          {
            "name": "topic",
            "in": "query",
            "description": "topic",
            "required": true,
            "type": "string",
            "default": "product.liwe.heimdall-service.listing.0"
          },
          {
            "name": "size",
            "in": "query",
            "description": "size",
            "required": true,
            "type": "integer",
            "format": "int64",
            "default": 10
          },
          {
            "name": "partition",
            "in": "query",
            "description": "partition",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "kafka-id",
            "in": "header",
            "description": "kafka-id",
            "required": true,
            "type": "integer",
            "format": "int64",
            "default": 0
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/get-message": {
      "get": {
        "tags": ["kafka"],
        "summary": "Get one message of topic",
        "description": "Get one message of topic",
        "operationId": "get-message",
        "parameters": [
          {
            "name": "topic",
            "in": "query",
            "description": "topic",
            "required": true,
            "type": "string",
            "default": "product.liwe.heimdall-service.listing.0"
          },
          {
            "name": "partition",
            "in": "query",
            "description": "partition",
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "offset",
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "kafka-id",
            "in": "header",
            "description": "kafka-id",
            "required": true,
            "type": "integer",
            "format": "int64",
            "default": 0
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/get-topic-info": {
      "get": {
        "tags": ["kafka"],
        "summary": "Summarize of topic",
        "description": "Summarize of topic",
        "operationId": "get-topic-info",
        "parameters": [
          {
            "name": "topic",
            "in": "query",
            "description": "topic",
            "required": true,
            "type": "string",
            "default": "product.liwe.heimdall-service.listing.0"
          },
          {
            "name": "kafka-id",
            "in": "header",
            "description": "kafka-id",
            "required": true,
            "type": "integer",
            "format": "int64",
            "default": 0
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/get-consumer-info": {
      "get": {
        "tags": ["kafka"],
        "summary": "Summarize of consumer group",
        "description": "Summarize of consumer group",
        "operationId": "get-consumer-info",
        "parameters": [
          {
            "name": "group_id",
            "in": "query",
            "description": "group_id",
            "required": true,
            "type": "string",
            "default": "product.liwe.heimdall-service.ruleCreatedEvent.high"
          },
          {
            "name": "kafka-id",
            "in": "header",
            "description": "kafka-id",
            "required": true,
            "type": "integer",
            "format": "int64",
            "default": 0
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/get-topic-configuration": {
      "get": {
        "tags": ["kafka"],
        "summary": "Get all configuration of topic",
        "description": "Get all configuration of topic",
        "operationId": "get-topic-configuration",
        "parameters": [
          {
            "name": "topic",
            "in": "query",
            "description": "topic",
            "required": true,
            "type": "string",
            "default": "product.liwe.heimdall-service.listing.0"
          },
          {
            "name": "kafka-id",
            "in": "header",
            "description": "kafka-id",
            "required": true,
            "type": "integer",
            "format": "int64",
            "default": 0
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/put-change-offset": {
      "put": {
        "tags": ["kafka"],
        "summary": "Change group offset in a topic",
        "description": "Change group offset in a topic",
        "operationId": "put-change-offset",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Change offset by shiftby, timestamp, beginning or end",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutChangeOffsetRequest"
            }
          },
          {
            "name": "kafka-id",
            "in": "header",
            "description": "kafka-id",
            "required": true,
            "type": "integer",
            "format": "int64",
            "default": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/get-simulation-change-offset": {
      "get": {
        "tags": ["kafka"],
        "summary": "Simulation of change group offset in a topic",
        "description": "Simulation of change group offset in a topic",
        "operationId": "get-simulation-change-offset",
        "parameters": [
          {
            "name": "group_id",
            "in": "query",
            "type": "string",
            "required": true,
            "default": "product.listing.group.0"
          },
          {
            "name": "topic_name",
            "in": "query",
            "type": "string",
            "required": true,
            "default": "product.liwe.heimdall-service.rule.0"
          },
          {
            "name": "offset_type",
            "in": "query",
            "type": "string",
            "required": true,
            "enum": ["BEGINNING", "END", "SHIFTBY", "DATE"],
            "default": "BEGINNING"
          },
          {
            "name": "value",
            "in": "query",
            "type": "integer",
            "format": "int64",
            "default": 0
          },
          {
            "name": "kafka-id",
            "in": "header",
            "description": "kafka-id",
            "required": true,
            "type": "integer",
            "format": "int64",
            "default": 0
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/get-match-topic-and-groups-job": {
      "get": {
        "tags": ["kafka"],
        "summary": "Trigger a job to match groups for topics",
        "description": "Trigger a job to match groups for topics",
        "operationId": "get-match-topic-and-groups-job",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/cache-clear": {
      "get": {
        "tags": ["kafka"],
        "summary": "Clear of caches belong to topics and groups",
        "description": "Clear of caches belong to topics and groups",
        "operationId": "cache-clear",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/{topic}/publish-message": {
      "post": {
        "tags": ["kafka"],
        "summary": "Publish message to the topic",
        "description": "Publish message to the topic",
        "operationId": "post-publish-message",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "topic",
            "in": "path",
            "description": "Topic Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "key",
            "in": "query",
            "description": "Event Key",
            "required": false,
            "type": "string"
          },
          {
            "name": "headers",
            "in": "header",
            "description": "Put Json Objects in Array",
            "required": false
          },
          {
            "in": "body",
            "name": "body",
            "description": "Event",
            "required": true,
            "default": "Put your event as JSON. You can fetch an example message from /get-message GET endpoint"
          },
          {
            "name": "kafka-id",
            "in": "header",
            "description": "kafka-id",
            "required": true,
            "type": "integer",
            "format": "int64",
            "default": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/copy-event": {
      "post": {
        "tags": ["kafka"],
        "summary": "Copy message to the specific topic from specific topic",
        "description": "Copy message to the specific topic from specific topic",
        "operationId": "post-copy-event",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Event",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostCopyEventRequest"
            }
          },
          {
            "name": "kafka-id",
            "in": "header",
            "description": "kafka-id",
            "required": true,
            "type": "integer",
            "format": "int64",
            "default": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      },
      "get": {
        "tags": ["kafka"],
        "summary": "Get all copy process",
        "description": "Get all copy process",
        "operationId": "get-copy-event",
        "parameters": [
          {
            "name": "fromTopic",
            "in": "query",
            "description": "From",
            "required": true,
            "type": "string"
          },
          {
            "name": "toTopic",
            "in": "query",
            "description": "To",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "delete": {
        "tags": ["kafka"],
        "summary": "Remove specific copy state",
        "description": "Remove specific copy state",
        "operationId": "delete-copy-event",
        "parameters": [
          {
            "name": "fromTopic",
            "in": "query",
            "description": "From",
            "required": true,
            "type": "string"
          },
          {
            "name": "toTopic",
            "in": "query",
            "description": "To",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/{topic}/topic-configuration": {
      "put": {
        "tags": ["kafka"],
        "summary": "Change specific value of topic's config",
        "description": "Change specific value of topic's config",
        "operationId": "put-topic-configuration",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "topic",
            "in": "path",
            "description": "Topic Name",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Key and value of the topic's config",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TopicConfigurationRequest"
            }
          },
          {
            "name": "kafka-id",
            "in": "header",
            "description": "kafka-id",
            "required": true,
            "type": "integer",
            "format": "int64",
            "default": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    }
  },
  "definitions": {
    "SearchResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "messages": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "PutChangeOffsetRequest": {
      "type": "object",
      "required": ["group_id", "topic_name", "offset_type"],
      "properties": {
        "group_id": {
          "type": "string"
        },
        "topic_name": {
          "type": "string"
        },
        "offset_type": {
          "type": "string",
          "description": "Change type of offset",
          "enum": ["BEGINNING", "END", "SHIFTBY", "DATE"]
        },
        "value": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "PostCopyEventRequest": {
      "type": "object",
      "required": ["fromTopic", "toTopic"],
      "properties": {
        "fromTopic": {
          "type": "string"
        },
        "fromId": {
          "type": "integer",
          "format": "int64"
        },
        "toTopic": {
          "type": "string"
        },
        "toId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "TopicConfigurationRequest": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "Config key"
        },
        "value": {
          "type": "string",
          "description": "Config value"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}
